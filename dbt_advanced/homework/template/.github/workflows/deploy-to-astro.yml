name: Astronomer Deployment

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch'
        required: true
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths:
        - "dags/**"
  push:
    branches:
      - main

env:
  ASTRO_API_TOKEN: ${{ secrets.ASTRO_API_TOKEN }}
  DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}

jobs:
  check_branch:
    name: 'Check branch name'
    runs-on: ubuntu-latest
    outputs:
      is_homework_branch: ${{ steps.check-homework-branch.outputs.is_homework_branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check if PR branch includes "homework"
        id: check-homework-branch
        run: |
          branch_name="${{ github.event.pull_request.head.ref }}"
          echo "Branch: $branch_name"
          if [[ "$branch_name" =~ .*homework.* ]]; then
            is_homework_branch="true"
          else
            is_homework_branch="false"
          fi
          echo "Homework branch: $is_homework_branch"
          echo "is_homework_branch=$is_homework_branch" >> $GITHUB_OUTPUT

  deploy_all_dags:
    name: 'Parse and deploy all DAGs'
    runs-on: ubuntu-latest
    needs: [check_branch]
    if: needs.check_branch.outputs.is_homework_branch == 'false'
    steps:
      - name: Deploy to Astronomer
        uses: astronomer/deploy-action@v0.4
        with:
          deployment-id: ${{ secrets.DEPLOYMENT_ID }}
          parse: true

  check_protected_files:
    name: 'Check protected files'
    runs-on: ubuntu-latest
    needs: [check_branch]
    if: needs.check_branch.outputs.is_homework_branch == 'true'
    outputs:
      protected_files_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .env
            dbt_project/dbt.env
            logs/**
            .astro/**
            Dockerfile
            README.md
            dags/pyspark/**
            dags/dbt/**
            dags/checks/**
            dags/.airflowignore
      - name: Run step if any protected files changed
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
          exit 1 # Fail the workflow if any protected files are changed

  check_community_dags:
    name: 'Check changed community DAGs'
    runs-on: ubuntu-latest
    needs: [check_branch, check_protected_files]
    if: needs.check_branch.outputs.is_homework_branch == 'true' && needs.check_protected_files.outputs.protected_files_changed != 'true'
    outputs:
      changed_dag_files: ${{ steps.changed-files.outputs.all_changed_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Get changed community DAG files
        id: changed-community-dags
        uses: tj-actions/changed-files@v44
        with:
          files: |
            dags/community/**
      - name: Get changed DAG files in PR author's community folder
        id: changed-files
        if: steps.changed-community-dags.outputs.any_changed == 'true'
        uses: tj-actions/changed-files@v44
        env:
          GITHUB_USERNAME: ${{ github.event.pull_request.user.login }}
        with:
          files: |
            dags/community/${GITHUB_USERNAME}/**
      - name: Run only if changed files found in last step
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
            ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
    
  deploy_community_dags:
    name: 'Parse and deploy community DAGs'
    runs-on: ubuntu-latest
    needs: [check_branch, check_community_dags]
    if: needs.check_branch.outputs.is_homework_branch == 'true' && needs.check_community_dags.outputs.changed_dag_files != '[]'
    steps:
      - name: Deploy to Astronomer
        uses: astronomer/deploy-action@v0.4
        with:
          deployment-id: ${{ secrets.DEPLOYMENT_ID }}
          parse: true
